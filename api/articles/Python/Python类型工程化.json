{"title":"Python类型工程化","slug":"Python/Python类型工程化","date":"2024-10-05T10:30:55.000Z","updated":"2025-08-08T17:05:15.300Z","comments":false,"path":"api/articles/Python/Python类型工程化.json","photos":[],"excerpt":"提升大型项目可维护性","covers":null,"content":"<p><strong>类型注解最佳实践</strong>：</p>\n<pre><code class=\"language-python\">from typing import TypedDict, Protocol\n\nclass UserData(TypedDict):\n    id: int\n    name: str\n    email: str | None\n\nclass StorageProtocol(Protocol):\n    def save(self, data: UserData) -&gt; bool: ...\n    def load(self, user_id: int) -&gt; UserData: ...\n\ndef process_user(storage: StorageProtocol) -&gt; None:\n    ...\n</code></pre>\n","categories":[{"name":"Python","slug":"Python","count":2,"path":"api/categories/Python.json"}],"tags":[{"name":"类型系统","slug":"类型系统","count":1,"path":"api/tags/类型系统.json"},{"name":"代码质量","slug":"代码质量","count":1,"path":"api/tags/代码质量.json"}]}